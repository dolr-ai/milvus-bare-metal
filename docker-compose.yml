version: '3.8'

x-logging: &default-logging
  driver: journald
  options:
    tag: "{{.Name}}"

services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - etcd-data:/etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus
    restart: always
    logging: *default-logging

  minio:
    image: docker.io/minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "127.0.0.1:9001:9001"
      - "127.0.0.1:9000:9000"
    volumes:
      - minio-data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus
    restart: always
    logging: *default-logging

  standalone:
    image: docker.io/milvusdb/milvus:v2.3.3
    container_name: milvus-standalone
    command: milvus run standalone
    security_opt:
      - label:disable
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - COMMON_SECURITY_AUTHORIZATIONENABLED=true
      - COMMON_SECURITY_DEFAULTROOTPASSWORD=${MILVUS_ROOT_PASSWORD:-milvus}
    ports:
      - "127.0.0.1:19530:19530"
      - "127.0.0.1:9091:9091"
    volumes:
      - milvus-data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 90s
    depends_on:
      - etcd
      - minio
    networks:
      - milvus
    restart: always
    logging: *default-logging

  caddy:
    image: caddy:alpine
    container_name: milvus-caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"  # HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - standalone
    networks:
      - milvus
    restart: always
    logging: *default-logging

  backup:
    image: mazzolino/restic
    container_name: milvus-backup
    hostname: milvus-backup
    environment:
      - RESTIC_REPOSITORY=s3:https://hel1.your-objectstorage.com/yral-milvus-backup
      - RESTIC_PASSWORD=${RESTIC_PASSWORD}
      - AWS_ACCESS_KEY_ID=${HETZNER_S3_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${HETZNER_S3_SECRET_KEY}
      - BACKUP_CRON=0 2 * * *  # Daily at 2 AM
      - RESTIC_BACKUP_SOURCES=/data
      - RESTIC_BACKUP_ARGS=--tag milvus --tag automated
      - RESTIC_FORGET_ARGS=--keep-daily 7 --keep-weekly 4 --keep-monthly 6
      - TZ=UTC
    volumes:
      - milvus-data:/data/milvus:ro
      - etcd-data:/data/etcd:ro
      - minio-data:/data/minio:ro
    restart: always
    logging: *default-logging

networks:
  milvus:
    driver: bridge

volumes:
  etcd-data:
  minio-data:
  milvus-data:
  caddy-data:
  caddy-config:
